%COMPUTECENTROIDS returns the new centroids by computing the means of the

function centroids = computeCentroids(X, idx, K) 
%data points assigned to each centroid.
%   centroids = COMPUTECENTROIDS(X, idx, K) returns the new centroids by 
%   computing the means of the data points assigned to each centroid. It is
%   given a dataset X where each row is a single data point, a vector
%   idx of centroid assignments (i.e. each entry in range [1..K]) for each
%   example, and K, the number of centroids. You should return a matrix
%   centroids, where each row of centroids is the mean of the data points
%   assigned to it.
%

% Useful variables
[m n] = size(X);

centroids = zeros(K, n);
for j=1:K
    c = 0;
    for i=1:m
        if(idx(i)==j)
            centroids(j,:) = centroids(j,:) + X(i,:);
            c = c+1;
        end
    end
    centroids(j,:) = centroids(j,:)/c;
end

end


%FINDCLOSESTCENTROIDS computes the centroid memberships for every example

function idx = findClosestCentroids(X, centroids)
%   idx = FINDCLOSESTCENTROIDS (X, centroids) returns the closest centroids
%   in idx for a dataset X where each row is a single example. idx = m x 1 
%   vector of centroid assignments (i.e. each entry in range [1..K])
%

% Set K
K = size(centroids, 1);
m = size(X,1);


idx = zeros(size(X,1), 1);
for i=1:m
    dist1 = sum((X(i,:)-centroids(1,:)).*(X(i,:)-centroids(1,:)));
    for j=1:K
        dist = sum((X(i,:)-centroids(j,:)).*(X(i,:)-centroids(j,:)));
        if(dist<=dist1)
            idx(i,1) = j;
            dist1=dist;
        end
    end
    
end
 
end
